name: Publish to PyPI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Increment version
        run: |
          #Get the current version from pyproject.toml
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          
          #Split versions into patches
          IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
          MAJOR="${version_parts[0]}"
          MINOR="${version_parts[1]}"
          PATCH="${version_parts[2]}"
          
          #Increment the patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          
          #Update pyproject.toml to reflect version
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" pyproject.toml
          
          echo "Version bumped from $CURRENT_VERSION to $NEW_VERSION"

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*